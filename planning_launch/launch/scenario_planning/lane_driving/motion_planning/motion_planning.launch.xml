<launch>
  <arg name="input_path_topic" default="/planning/scenario_planning/lane_driving/behavior_planning/path" />
  <arg name="vehicle_model" />

  <!-- path planning for avoiding obstacle with dynamic object info -->
  <group>
    <include file="$(find-pkg-share obstacle_avoidance_planner)/launch/obstacle_avoidance_planner.launch.xml">
      <arg name="param_path" value="$(find-pkg-share planning_launch)/config/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner.yaml"/>
      <arg name="input_path_topic" value="$(var input_path_topic)" />
      <arg name="output_path_topic" value="obstacle_avoidance_planner/trajectory" />
      <arg name="vehicle_model" value="$(var vehicle_model)" />
    </include>
  </group>


  <!-- surround obstacle checker (Do not start if there are pedestrian/bicycles around ego-car) -->
  <group>
    <include file="$(find-pkg-share surround_obstacle_checker)/launch/surround_obstacle_checker.launch.xml">
      <arg name="input_trajectory" value="obstacle_avoidance_planner/trajectory" />
      <arg name="output_trajectory" value="surround_obstacle_checker/trajectory" />
      <arg name="vehicle_model" value="$(var vehicle_model)" />
    </include>
  </group>


  <!-- stop velocity planning with obstacle pointcloud info -->

  <group>
    <include file="$(find-pkg-share obstacle_stop_planner)/launch/obstacle_stop_planner.launch.xml">
      <arg name="input_trajectory" value="surround_obstacle_checker/trajectory" />
      <arg name="input_pointcloud" value="/sensing/lidar/no_ground/pointcloud" />
      <arg name="output_trajectory" value="/planning/scenario_planning/lane_driving/trajectory" />
      <arg name="vehicle_model" value="$(var vehicle_model)" />
    </include>
  </group>

</launch>
